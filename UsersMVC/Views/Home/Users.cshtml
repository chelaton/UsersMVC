@using UsersMVC.Helpers
@model PaginatedList<UsersMVC.DTOs.User>

@{
    ViewData["Title"] = "Users";
}

<h1>Users</h1>

<table class="table">
    <thead>
        <tr>

            <th>
                <a asp-action="Users" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
            </th>
            <th>
                <a asp-action="Users" asp-route-sortOrder="@ViewData["EmailSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Email</a>
            </th>
            <th>
                Bs
            </th>
            <th>
                CatchPhrase
            </th>
            <th>
                CompanyName
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @*            <td>
                    @Html.DisplayFor(modelItem => item.id)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.name)
                </td>
                @*            <td>
                    @Html.DisplayFor(modelItem => item.username)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.company.bs)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.company.catchPhrase)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.company.name)
                </td>
                @*            <td>
                    @Html.DisplayFor(modelItem => item.phone)
                    </td>
                    <td>
                    @Html.DisplayFor(modelItem => item.website)
                    </td>*@
                <td>
                    @Html.ActionLink("SetAsFavorite", "MakeFavorite", new { /* id=item.PrimaryKey */ }) |
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Users"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>

@Model.PageIndex
<a asp-action="Users"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
